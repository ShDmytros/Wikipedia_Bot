import telebot, time
from get_info import parsing
from data.my_key import key
from telebot import types
# pip install pyTelegramBotAPI


bot = telebot.TeleBot(key)
user_language = {}


@bot.message_handler(commands=['start'])
def welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("/start")
    item2 = types.KeyboardButton("/ukrainian")
    item3 = types.KeyboardButton("/english")
    markup.add(item1, item2, item3)

    # ukrainian
    bot.send_message(message.chat.id, "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞üá∫üá¶")
    bot.send_message(message.chat.id, "–¶–µ –≤–µ—Ä—Å—ñ—è 2.0 –í—ñ–∫—ñ–ø–µ–¥—ñ—ó –±–æ—Ç–∞! –Ø–∫—â–æ –±—É–¥—É—Ç—å —è–∫—ñ—Å—å –ø–æ–º–∏–ª–∫–∏, –ø–∏—à—ñ—Ç—å @ShDmytros")
    bot.send_message(message.chat.id, "–ê–≤—Ç–æ—Ä: –î–º–∏—Ç—Ä–æ –®—Ç—É—á–∫–∞")
    bot.send_message(message.chat.id,
                     "1.–î–æ—Å—Ç—É–ø–Ω–∞ –ª–∏—à–µ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞üá∫üá¶ —Ç–∞ –∞–Ω–≥–ª—ñ–π—Å—å–∫–∞ –º–æ–≤–∞üá¨üáß, –∑ –±—É–¥—å —è–∫–∏–º–∏ —ñ–Ω—à–∏–º–∏ –º–æ–≤–∞–º–∏ –±–æ—Ç "
                     "–ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –Ω–µ –±—É–¥–µ!\n\n2.–ü–∏—à—ñ—Ç—å –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –∫–æ—Ä–µ–∫—Ç–Ω–æ.")
    bot.send_message(message.chat.id,
                     '–í–∫–∞–∂—ñ—Ç—å –º–æ–≤—É —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è, —â–æ–± –æ–±—Ä–∞—Ç–∏ –º–æ–≤—É —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è, –Ω–∞–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É, –¥–ª—è —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó '
                     '/ukrainian, —Ç–∞ –¥–ª—è –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó /english')

    # english
    bot.send_message(message.chat.id, "English languageüá¨üáß")
    bot.send_message(message.chat.id, "This is a version 2.0 of the bot's Wikipedia! If there are any errors, "
                                      "write to @ShDmytros")
    bot.send_message(message.chat.id, "Author: Dmytro Shtuchka")
    bot.send_message(message.chat.id,
                     "1.Only Ukrainianüá∫üá¶ and Englishüá¨üáß are available, with any other languages the bot"
                     "will not work!\n\n2.Be sure to write correctly.")
    bot.send_message(message.chat.id,
                     'Specify the language of communication to select the language of communication, write a command, '
                     'for Ukrainian /ukrainian and for English /english', reply_markup=markup)


@bot.message_handler(commands=['ukrainian'])
def ua(lang):
    user_language[lang.chat.id] = "ua"

    bot.send_message(lang.chat.id,
                     '–í–∏ –æ–±—Ä–∞–ª–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É –º–æ–≤—Éüá∫üá¶, —è–∫—â–æ –í–∏ —Ö–æ—á–µ—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ –º–æ–≤—É, –Ω–∞–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /start —Ç–∞ –ø–æ—Ç–æ—Ä—ñ—Ç—å '
                     '–≤—Å–µ –∑–ø–æ—á–∞—Ç–∫—É. ')
    bot.send_message(lang.chat.id, '–¢–µ–ø–µ—Ä –Ω–∞–ø–∏—à—ñ—Ç—å, —â–æ –í–∏ —Ö–æ—á–µ—Ç–µ –∑–Ω–∞–π—Ç–∏, –¥–æ –ø—Ä–∏–∫–ª–∞–¥—É "–õ–æ—Å –ê–Ω–¥–∂–µ–ª–µ—Å", "–ù–∞–ø–æ–ª–µ–æ–Ω—ñ–≤—Å—å–∫—ñ '
                                   '–≤—ñ–π–Ω–∏",'
                                   '–°–æ–±–∞–∫–∏, "–•–µ—Ä—Å–æ–Ω", "–õ—å–≤—ñ–≤" —Ç–æ—â–æ.')


@bot.message_handler(commands=['english'])
def en(lang):
    user_language[lang.chat.id] = "en"

    bot.send_message(lang.chat.id,
                     'You have chosen English languageüá¨üáß, if you want to change the language, write the command '
                     '/start and start over.')
    bot.send_message(lang.chat.id, 'Now write down what you want to find, for example, "Los Angeles", "Napoleonic '
                                   'Wars",'
                                   '"Dogs", "Kherson", "Lviv", etc.')


@bot.message_handler(content_types=["text"])
def message_handler(message):
    language = user_language.get(message.chat.id)

    if language == "ua":
        bot.send_message(message.chat.id, "–¢—Ä–æ—Ö–∏ –∑–∞—á–µ–∫–∞–π—Ç–µ, –π–¥–µ –ø–æ—à—É–∫ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó.")
        bot.send_message(message.chat.id, "üîé")

        data = parsing(text=message.text, lang="ua")

    elif language == "en":
        bot.send_message(message.chat.id, "Please wait a moment, the bot is searching for information.")
        bot.send_message(message.chat.id, "üîé")

        data = parsing(text=message.text, lang="en")

    else:
        bot.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø–æ—á–∞—Ç–∫—É –æ–±–µ—Ä—ñ—Ç—å –º–æ–≤—É –∫–æ–º–∞–Ω–¥–æ—é /start.")
        bot.send_message(message.chat.id, "Please first select the language with the /start command.")
        return

    data_info: str = data.data_list if data and hasattr(data, "data_list") else None
    data_photo: str = data.photo if data and hasattr(data, "photo") else None

    if "None" in data_info:
        bot.send_message(message.chat.id, "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!" if language == "ua" else "Information not found!")
    else:
        bot.send_message(message.chat.id, text=data_info)

        if "None" not in data_photo:
            bot.send_photo(message.chat.id, data_photo)


while True:
    try:
        bot.polling(non_stop=True)
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞: {e}")
        time.sleep(15)  # –ü–æ—á–µ–∫–∞—Ç–∏ 15 —Å–µ–∫—É–Ω–¥ —ñ –∑–Ω–æ–≤—É –∑–∞–ø—É—Å—Ç–∏—Ç–∏